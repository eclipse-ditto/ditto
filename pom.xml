<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation
  ~
  ~ See the NOTICE file(s) distributed with this work for additional
  ~ information regarding copyright ownership.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eclipse.ditto</groupId>
    <artifactId>ditto</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>Eclipse Ditto</name>
    <description>Eclipse Ditto is a framework for creating and managing digital twins in the IoT.</description>
    <url>https://eclipse.dev/ditto/</url>
    <inceptionYear>2017</inceptionYear>

    <organization>
        <name>Eclipse Foundation</name>
        <url>http://www.eclipse.org/</url>
    </organization>

    <licenses>
        <license>
            <name>Eclipse Public License - Version 2.0</name>
            <url>https://www.eclipse.org/org/documents/epl-2.0/index.php</url>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/eclipse-ditto/ditto/issues</url>
    </issueManagement>

    <prerequisites>
        <maven>3.5.0</maven>
    </prerequisites>

    <scm>
        <connection>${release.scm.connection}</connection>
        <developerConnection>${release.scm.developerConnection}</developerConnection>
        <url>${release.scm.url}</url>
    </scm>

    <ciManagement>
        <system>Jenkins</system>
        <url>https://ci.eclipse.org/ditto/</url>
    </ciManagement>

    <distributionManagement>
        <repository>
            <id>repo.eclipse.org</id>
            <name>Ditto Releases</name>
            <url>https://repo.eclipse.org/content/repositories/ditto-releases/</url>
        </repository>
        <snapshotRepository>
            <id>repo.eclipse.org</id>
            <name>Ditto Snapshots</name>
            <url>https://repo.eclipse.org/content/repositories/ditto-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <developers>
        <developer>
            <id>geglocker</id>
            <name>Gerald Glocker</name>
            <email>gerald.glocker@bosch.io</email>
            <url>https://github.com/geglock</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Lead</role>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>tjaeckle</id>
            <name>Thomas Jaeckle</name>
            <email>thomas.jaeckle@beyonnex.io</email>
            <url>https://github.com/thjaeckle</url>
            <organization>beyonnex.io GmbH</organization>
            <organizationUrl>https://beyonnex.io</organizationUrl>
            <roles>
                <role>Lead</role>
                <role>Committer</role>
            </roles>
        </developer>

        <developer>
            <id>yucai</id>
            <name>Yufei Cai</name>
            <email>yufei.cai@bosch.io</email>
            <url>https://github.com/yufei-cai</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>dfesenmeyer</id>
            <name>Daniel Fesenmeyer</name>
            <email>daniel.fesenmeyer@bosch.io</email>
            <url>https://github.com/danielFesenmeyer</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>dguggemos</id>
            <name>Dominik Guggemos</name>
            <email>dominik.guggemos@bosch.io</email>
            <url>https://github.com/dguggemos</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>jfickel</id>
            <name>Juergen Fickel</name>
            <email>eclipse-foundation@retujo.de</email>
            <url>https://github.com/jufickel-b</url>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>jkraeher</id>
            <name>Johannes Schneider</name>
            <email>johannes.schneider@bosch.io</email>
            <url>https://github.com/jokraehe</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>ffendt</id>
            <name>Florian Fendt</name>
            <email>florian.fendt@bosch.io</email>
            <url>https://github.com/ffendt</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>smaute</id>
            <name>Stefan Maute</name>
            <email>stefan.maute@bosch.io</email>
            <url>https://github.com/stmaute</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>yklem</id>
            <name>Yannic Klem</name>
            <email>yannic.klem@bosch.io</email>
            <url>https://github.com/Yannic92</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
        <developer>
            <id>dschwilk</id>
            <name>David Schwilk</name>
            <email>david.schwilk@bosch.io</email>
            <url>https://github.com/DerSchwilk</url>
            <organization>Bosch.IO GmbH</organization>
            <organizationUrl>https://www.bosch.io</organizationUrl>
            <roles>
                <role>Committer</role>
            </roles>
        </developer>
    </developers>

    <modules>
        <module>base</module>
        <module>bom</module>
        <module>connectivity</module>
        <module>documentation</module>
        <module>gateway</module>
        <module>internal</module>
        <module>json</module>
        <module>json-cbor</module>
        <module>jwt</module>
        <module>legal</module>
        <module>messages</module>
        <module>placeholders</module>
        <module>policies</module>
        <module>protocol</module>
        <module>rql</module>
        <module>things</module>
        <module>thingsearch</module>
        <module>utils</module>
        <module>wot</module>
        <module>edge</module>
    </modules>

    <properties>
        <revision>0-SNAPSHOT</revision>

        <javac.source>17</javac.source>
        <javac.target>17</javac.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- configure timestamp format to be injected into legal docs -->
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>

        <release.scm.connection>scm:git:git@github.com:eclipse-ditto/ditto.git</release.scm.connection>
        <release.scm.developerConnection>scm:git:https://github.com/eclipse-ditto/ditto.git</release.scm.developerConnection>
        <release.scm.url>https://github.com/eclipse-ditto/ditto.git</release.scm.url>

        <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>

        <!-- globally set version for checking binary compatibility against -->
        <!-- whoever changes this to ${revision} or ${project.version} is responsible for API breakage caused by this! -->
        <!-- in other words: never do that here! exclude the 'breakages' locally in the japicmp maven plugin if you intentionally break something -->
        <binary-compatibility-check.version>3.4.0</binary-compatibility-check.version>

        <maven.skins.fluido.version>1.7</maven.skins.fluido.version>
        <doxia.markdown.version>1.8</doxia.markdown.version>

        <ditto.thirdPartyLicences.excludedGroups>
            (org\.eclipse\.ditto.*)|(com\.lihaoyi.*)
        </ditto.thirdPartyLicences.excludedGroups>

        <japicmp-maven-plugin.version>0.17.3</japicmp-maven-plugin.version>

        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <repositories>
        <repository>
            <id>apache-releases</id>
            <name>apache-releases</name>
            <url>https://repository.apache.org/content/repositories/releases/</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- Changes in plugin should also be made in inspect-deprecations profile -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${javac.source}</source>
                        <target>${javac.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                        </archive>
                    </configuration>
                </plugin>

                <!-- Declaration for the 3 following plugins is explicitly needed by Maven 3 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                        <detectJavaApiLink>false</detectJavaApiLink>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <argLine>
                            --add-opens java.base/java.lang=ALL-UNNAMED
                            --add-opens java.base/java.util=ALL-UNNAMED
                            --add-opens java.base/sun.security.util=ALL-UNNAMED
                            ${surefireArgLine}
                        </argLine>
                        <systemProperties>
                            <kamon.auto-start>true</kamon.auto-start>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.1.2</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>4.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.10</version>
                </plugin>
                <plugin>
                    <groupId>com.github.siom79.japicmp</groupId>
                    <artifactId>japicmp-maven-plugin</artifactId>
                    <version>${japicmp-maven-plugin.version}</version>
                    <configuration>
                        <oldVersion>
                            <dependency>
                                <groupId>org.eclipse.ditto</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <version>${binary-compatibility-check.version}</version>
                                <type>${project.packaging}</type>
                            </dependency>
                        </oldVersion>
                        <newVersion>
                            <file>
                                <path>${project.build.directory}/${project.artifactId}-${project.version}.jar</path>
                            </file>
                        </newVersion>
                        <parameter>
                            <onlyModified>true</onlyModified>
                            <accessModifier>public</accessModifier>
                            <breakBuildOnModifications>false</breakBuildOnModifications>
                            <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications>
                            <breakBuildOnSourceIncompatibleModifications>false</breakBuildOnSourceIncompatibleModifications>
                            <onlyBinaryIncompatible>true</onlyBinaryIncompatible>
                            <includeSynthetic>false</includeSynthetic>
                            <ignoreMissingClasses>false</ignoreMissingClasses>
                            <skipPomModules>true</skipPomModules>
                            <htmlTitle>${project.name} :: Binary Compatibility Report</htmlTitle>
                            <overrideCompatibilityChangeParameters>
                                <!-- Consider new method added to interface as binary-compatible and not
                                     source-compatible. Require only binary compatibility for semantic versioning,
                                     due to ubiquitous usage of interfaces for information hiding in model packages.
                                 -->
                                <overrideCompatibilityChangeParameter>
                                    <compatibilityChange>METHOD_NEW_DEFAULT</compatibilityChange>
                                    <binaryCompatible>true</binaryCompatible>
                                    <sourceCompatible>true</sourceCompatible>
                                </overrideCompatibilityChangeParameter>
                                <overrideCompatibilityChangeParameter>
                                    <compatibilityChange>METHOD_ABSTRACT_NOW_DEFAULT</compatibilityChange>
                                    <binaryCompatible>true</binaryCompatible>
                                    <sourceCompatible>true</sourceCompatible>
                                </overrideCompatibilityChangeParameter>
                                <overrideCompatibilityChangeParameter>
                                    <compatibilityChange>METHOD_ADDED_TO_INTERFACE</compatibilityChange>
                                    <binaryCompatible>true</binaryCompatible>
                                    <sourceCompatible>false</sourceCompatible>
                                </overrideCompatibilityChangeParameter>
                            </overrideCompatibilityChangeParameters>
                            <excludes>
                                <!-- Don't add excludes here before checking with the whole Ditto team -->
                                <!--<exclude></exclude>-->
                            </excludes>
                        </parameter>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>cmp</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>5.1.9</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                        </archive>
                        <instructions>
                            <Bundle-Vendor>Eclipse Ditto</Bundle-Vendor>
                            <Bundle-License>EPL-2.0</Bundle-License>
                            <Bundle-DocURL>https://eclipse.dev/ditto/</Bundle-DocURL>
                            <_noee>true</_noee>
                            <!-- stays at 1.8 as all exported bundles (json, model, protocol-adapter, signals, ...) are 1.8 -->
                            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
                            <Include-Resource>META-INF=${project.build.outputDirectory}/META-INF</Include-Resource>
                            <!--<Include-Resource>{maven-resources},META-INF=${project.build.outputDirectory}/META-INF</Include-Resource>-->
                        </instructions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.16.0</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>4.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>port-allocator-maven-plugin</artifactId>
                    <version>1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.13</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.cbi.maven.plugins</groupId>
                    <artifactId>eclipse-jarsigner-plugin</artifactId>
                    <version>1.4.2</version>
                </plugin>
                <plugin>
                    <groupId>de.saumya.mojo</groupId>
                    <artifactId>gem-maven-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.5.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <tag>${project.version}</tag>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!--
                      Copy legal documents from "legal" module to "target/classes" folder
                      so that we make sure to include legal docs in all modules.
                     -->
                    <execution>
                        <id>copy-legal-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ditto-legal</includeArtifactIds>
                            <excludes>**/*.iml,NOTICE-THIRD-PARTY.md,3rd-party-dependencies/**,META-INF/**</excludes>
                            <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- in order to gather all dependencies which are used in Ditto, execute following bash command:
                    find ./ -type d -name 'dependencies' -exec cp -a {} ditto_all_dependencies \;
                This will copy all dependencies to the folder ditto_all_dependencies
            -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <header>${project.basedir}/src/license-header.txt</header>
                    <validHeaders>
                        <header>${project.basedir}/src/license-header-2017.txt</header>
                        <header>${project.basedir}/src/license-header-2018.txt</header>
                        <header>${project.basedir}/src/license-header-2019.txt</header>
                        <header>${project.basedir}/src/license-header-2020.txt</header>
                        <header>${project.basedir}/src/license-header-2021.txt</header>
                        <header>${project.basedir}/src/license-header-2022.txt</header>
                    </validHeaders>
                    <aggregate>true</aggregate>
                    <quiet>false</quiet>
                    <failIfMissing>true</failIfMissing>
                    <strictCheck>false</strictCheck>
                    <headerDefinitions>
                        <headerDefinition>${project.basedir}/src/license-header-xml-def.xml</headerDefinition>
                    </headerDefinitions>
                    <includes>
                        <include>**/*.java</include>
                        <include>**/*.scala</include>
                        <include>**/*.sh</include>
                        <include>**/pom.xml</include>
                    </includes>
                    <excludes>
                        <exclude>target/**</exclude>
                    </excludes>
                    <useDefaultExcludes>true</useDefaultExcludes>
                    <encoding>UTF-8</encoding>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                      <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                              <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <flattenMode>ossrh</flattenMode>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>eclipse-repo</id>
            <name>Eclipse CBI Repository</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://repo.eclipse.org/content/repositories/cbi-releases/</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>generate-custom-third-party-notices</id>
            <activation>
                <file>
                    <!-- that file only exists when running the build on the root level: -->
                    <exists>${maven.multiModuleProjectDirectory}/legal/templates/third-party-file.ftl</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>default-cli</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>add-third-party</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                                    <excludedGroups>${ditto.thirdPartyLicences.excludedGroups}</excludedGroups>
                                    <includedScopes>compile,runtime</includedScopes>
                                    <failOnMissing>true</failOnMissing>
                                    <fileTemplate>${maven.multiModuleProjectDirectory}/legal/templates/third-party-file.ftl
                                    </fileTemplate>
                                    <thirdPartyFilename>NOTICE-THIRD-PARTY.md</thirdPartyFilename>
                                    <licenseMergesFile>${maven.multiModuleProjectDirectory}/legal/templates/licenses-merges-file
                                    </licenseMergesFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>generate-third-party-licenses</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>add-third-party</id>
                                <goals>
                                    <goal>aggregate-add-third-party</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>./legal</outputDirectory>
                                    <excludedGroups>${ditto.thirdPartyLicences.excludedGroups}</excludedGroups>
                                    <includedScopes>compile,runtime</includedScopes>
                                    <failOnMissing>true</failOnMissing>
                                    <fileTemplate>./legal/templates/third-party-file.ftl</fileTemplate>
                                    <thirdPartyFilename>NOTICE-THIRD-PARTY.md</thirdPartyFilename>
                                    <licenseMergesFile>./legal/templates/licenses-merges-file</licenseMergesFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>createJavadoc</id>
            <activation>
                <property>
                    <name>createJavadoc</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>performRelease</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <docker.image.additional.tag>latest</docker.image.additional.tag>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-no-snapshots</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireReleaseDeps>
                                            <message>No SNAPSHOT dependencies allowed in release!</message>
                                        </requireReleaseDeps>
                                        <requireReleaseVersion>
                                            <message>Artifact cannot be SNAPSHOT version in release!</message>
                                        </requireReleaseVersion>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>signArtifactsEclipse</id>
            <activation>
                <property>
                    <name>signArtifactsEclipse</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.cbi.maven.plugins</groupId>
                        <artifactId>eclipse-jarsigner-plugin</artifactId>
                        <configuration>
                            <excludeInnerJars>true</excludeInnerJars>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign-jars</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>signArtifactsMavenCentral</id>
            <activation>
                <property>
                    <name>signArtifacts</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                  <gpgArguments>
                                    <arg>--pinentry-mode</arg>
                                    <arg>loopback</arg>
                                  </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>publishToEclipseMavenRepo</id>
            <activation>
                <property>
                    <name>publishToEclipseMavenRepo</name>
                    <value>true</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>repo.eclipse.org</id>
                    <name>Project Repository - Releases</name>
                    <url>https://repo.eclipse.org/content/repositories/ditto-releases/</url>
                </repository>
                <snapshotRepository>
                    <id>repo.eclipse.org</id>
                    <name>Project Repository - Snapshots</name>
                    <url>https://repo.eclipse.org/content/repositories/ditto-snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>

        <profile>
            <id>publishToMavenCentral</id>
            <activation>
                <property>
                    <name>publishToMavenCentral</name>
                    <value>true</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>ossrh</id>
                    <name>Eclipse Ditto Repository - Release</name>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
                </repository>
                <snapshotRepository>
                    <id>ossrh</id>
                    <name>Eclipse Ditto Repository - Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
            </distributionManagement>
            <build>
                <plugins>
                    <!-- see doc: http://central.sonatype.org/pages/apache-maven.html -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <skipStagingRepositoryClose>false</skipStagingRepositoryClose>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <autoDropAfterRelease>true</autoDropAfterRelease>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- This profile inspects and reports usage of deprecated methods -->
            <id>inspect-deprecations</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.7.0</version>
                        <configuration>
                            <source>${javac.source}</source>
                            <target>${javac.target}</target>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <showDeprecation>true</showDeprecation>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
