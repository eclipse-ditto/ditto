<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation
  ~
  ~ See the NOTICE file(s) distributed with this work for additional
  ~ information regarding copyright ownership.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ditto</groupId>
        <artifactId>ditto-services-policies</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>ditto-services-policies-starter</artifactId>
    <name>Eclipse Ditto :: Services :: Policies :: Starter</name>

    <properties>
        <the.build.timestamp>${maven.build.timestamp}</the.build.timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-base</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ditto-services-policies-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ditto-services-policies-persistence</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-akka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-cluster</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-persistence</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-health</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-devops</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster_${scala.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-tools_${scala.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j_${scala.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.version}</artifactId>
        </dependency>

        <dependency>
            <groupId>com.lightbend.akka.discovery</groupId>
            <artifactId>akka-discovery-kubernetes-api_${scala.version}</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_${scala.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-test</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-services-utils-persistence</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>versions.json</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>versions.json</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>allinone</shadedClassifierName>
                            <artifactSet>
                                <includes>
                                    <include>*:*</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>**/*.groovy</exclude>
                                        <!-- exclude groovy files so that cf doesn't
                                           think we want to deploy a spring boot cli app -->
                                        <!-- exclude manifest signature files -->
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>LICENSE</exclude>
                                        <exclude>README.md</exclude>
                                        <exclude>META-INF/LICENSE*</exclude>
                                        <exclude>META-INF/NOTICE*</exclude>
                                        <exclude>rootdoc.txt</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.atteo.classindex.ClassIndexTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>org.eclipse.ditto.services.policies.starter.PoliciesService
                                        </Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.atteo.classindex</groupId>
                        <artifactId>classindex-transformer</artifactId>
                        <version>${classindex.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>always</autoPull> <!-- always pull latest BaseImage -->
                    <images>
                        <image>
                            <alias>${policies.docker.image.name}</alias>
                            <name>
                                ${docker.repository}/${policies.docker.image.name}:${project.version}
                            </name>
                            <build>
                                <from>${docker.image.jdk}</from>
                                <tags>
                                    <tag>${docker.image.additional.tag}</tag>
                                </tags>
                                <ports>
                                    <port>${docker.image.port}</port>
                                </ports>
                                <env>
                                    <HTTP_PORT>${docker.image.port}</HTTP_PORT>
                                    <HOSTING_ENVIRONMENT>Docker</HOSTING_ENVIRONMENT>
                                </env>
                                <workdir>/opt/ditto</workdir>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <arg>-jar</arg>
                                        <arg>/opt/ditto/starter.jar</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <basedir>/</basedir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <runCmds>
                                    <runCmd>ln -s /opt/ditto/${project.build.finalName}-allinone.jar /opt/ditto/starter.jar</runCmd>
                                </runCmds>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
