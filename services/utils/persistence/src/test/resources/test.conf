ditto {

  mongodb {
    hostname = "localhost"
    hostname = ${?DOCKER_HOST}
    hostname = ${?MONGO_HOSTNAME}
    port = 27017
    port = ${?MONGO_PORT}
    database = "test"
    uri = "mongodb://"${?ditto.mongodb.authentication}${ditto.mongodb.hostname}":"${ditto.mongodb.port}"/"${ditto.mongodb.database}
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "WARNING"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # for log messages during the actor system is starting up and shutting down:
  stdout-loglevel = "WARNING"

  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    enable-additional-serialization-bindings = on

    # this is only intended for testing.
    serialize-messages = off
    serialize-creators = off

    debug {
      lifecycle = on
    }

    guardian-supervisor-strategy = "akka.actor.StoppingSupervisorStrategy"

    deployment {
    }

    default-dispatcher {
      fork-join-executor {
        parallelism-min = 4
        parallelism-factor = 3.0
        parallelism-max = 32
        parallelism-max = ${?DEFAULT_DISPATCHER_PARALLELISM_MAX}
      }
    }
  }

  remote {
    log-remote-lifecycle-events = on
    artery {
      enabled = on
      transport = tcp
    }
    artery.canonical {
      hostname = "127.0.0.1"
      port = 0
      port = ${?RANDOM_TEST_PORT}
    }
  }

  cluster {
    metrics.enabled = off
    seed-nodes = ["akka://AkkaTestSystem@"${akka.remote.artery.canonical.hostname}":"${akka.remote.artery.canonical.port}]

    roles = [
    ]
  }

  test {
    # factor by which to scale timeouts during tests, e.g. to account for shared
    # build system load
    timefactor = 1.0

    # duration of EventFilter.intercept waits after the block is finished until
    # all required messages are received
    filter-leeway = 3s

    # duration to wait in expectMsg and friends outside of within() block
    # by default
    single-expect-default = 3s

    # The timeout that is added as an implicit by DefaultTimeout trait
    default-timeout = 5s

    calling-thread-dispatcher {
      type = akka.testkit.CallingThreadDispatcherConfigurator
    }
  }

  persistence {
    journal.auto-start-journals = [
      "akka-contrib-mongodb-persistence-test-journal"
    ]
    snapshot-store.auto-start-snapshot-stores = [
      "akka-contrib-mongodb-persistence-test-snapshots"
    ]
  }
}

akka-contrib-mongodb-persistence-test-journal {
  class = "akka.persistence.inmemory.journal.InMemoryAsyncWriteJournal"

  ask-timeout = 10s

  overrides {
    journal-collection = "test_journal"
    journal-index = "test_journal_index"

    realtime-collection = "test_realtime"
    metadata-collection = "test_metadata"
  }

  event-adapter-bindings {
    "org.eclipse.ditto.signals.events.base.Event" = mongodbobject
    "org.bson.BsonValue" = mongodbobject
  }
}

akka-contrib-mongodb-persistence-test-snapshots {
  class = "akka.persistence.inmemory.snapshot.InMemorySnapshotStore"

  ask-timeout = 10s
}
