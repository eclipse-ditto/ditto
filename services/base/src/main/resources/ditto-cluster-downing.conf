ditto.cluster-downing {
  # Disable with "off" or specify a duration to enable.
  down-removal-margin = 8s
  # how to find the right value:
  # https://developer.lightbend.com/docs/akka-commercial-addons/current/split-brain-resolver.html#cluster-singleton-and-cluster-sharding
  down-removal-margin = ${?CLUSTER_DOWNING_DOWN_REMOVAL_MARGIN}

  # by default, take the same value as the down-removal-margin
  stable-after = ${ditto.cluster-downing.down-removal-margin}
  stable-after = ${?CLUSTER_DOWNING_STABLE_AFTER}
  active-strategy = keep-majority
  role = ""
}

akka.cluster {
  downing-provider-class = com.ajjpj.simpleakkadowning.SimpleAkkaDowningProvider
  down-removal-margin = ${ditto.cluster-downing.down-removal-margin}
}

# Source: https://github.com/arnohaase/simple-akka-downing/blob/master/src/main/resources/reference.conf
simple-akka-downing {
  # See akka.cluster.down-removal-margin
  down-removal-margin = ${ditto.cluster-downing.down-removal-margin}

  # Time margin after which unreachable nodes in a stable cluster state (i.e. no nodes changed
  #  their membership state or their reachability) are treated as permanently unreachable, and
  #  the split-brain resolution strategy kicks in.
  stable-after = ${ditto.cluster-downing.stable-after}

  active-strategy = ${ditto.cluster-downing.active-strategy}

  static-quorum {
    # minimum number of nodes that the cluster must have
    quorum-size = undefined
    # if the 'role' is defined the decision is based only on members with that 'role'
    role = ${ditto.cluster-downing.role}
  }

  keep-majority {
    # if the 'role' is defined the decision is based only on members with that 'role'
    # to be set in each service config
    role = ${ditto.cluster-downing.role}
  }
}
