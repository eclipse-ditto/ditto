# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
version: '3.4'

services:
  mongodb:
    image: docker.io/mongo:5.0
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256m
    restart: always
    networks:
      default:
        aliases:
          - mongodb
    command: mongod --storageEngine wiredTiger --noscripting
    volumes:
      - "/opt/docker-volumes/mongo-data:/data/db"
    environment:
      TZ: Europe/Berlin
    logging:
      options:
        max-size: 50m

  policies:
    image: docker.io/eclipse/ditto-policies:${DITTO_VERSION:-latest}
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512m
    restart: always
    networks:
      default:
        aliases:
          - ditto-cluster
    environment:
      - TZ=Europe/Berlin
      - BIND_HOSTNAME=0.0.0.0
      - JAVA_TOOL_OPTIONS=-XX:ActiveProcessorCount=1 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=280s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class=""
      - MONGO_DB_HOSTNAME=mongodb
    healthcheck:
      test: curl --fail `hostname`:7626/alive || exit 1
      interval: 30s
      timeout: 15s
      retries: 4
      start_period: 300s
    logging:
      options:
        max-size: 50m

  things:
    image: docker.io/eclipse/ditto-things:${DITTO_VERSION:-latest}
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512m
    restart: always
    networks:
      default:
        aliases:
          - ditto-cluster
    depends_on:
      - policies
    environment:
      - TZ=Europe/Berlin
      - BIND_HOSTNAME=0.0.0.0
      - DITTO_DEVOPS_FEATURE_WOT_INTEGRATION_ENABLED=true
      - THINGS_WOT_TO_THING_DESCRIPTION_BASE_PREFIX=https://ditto.eclipseprojects.io
      - JAVA_TOOL_OPTIONS=-XX:ActiveProcessorCount=1 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=280s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class=""
      - MONGO_DB_HOSTNAME=mongodb
    healthcheck:
      test: curl --fail `hostname`:7626/alive || exit 1
      interval: 30s
      timeout: 15s
      retries: 4
      start_period: 300s
    logging:
      options:
        max-size: 50m

  things-search:
    image: docker.io/eclipse/ditto-things-search:${DITTO_VERSION:-latest}
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512m
    restart: always
    networks:
      default:
        aliases:
          - ditto-cluster
    depends_on:
      - policies
    environment:
      - TZ=Europe/Berlin
      - BIND_HOSTNAME=0.0.0.0
      - JAVA_TOOL_OPTIONS=-XX:ActiveProcessorCount=1 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=280s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class=""
      - MONGO_DB_HOSTNAME=mongodb
    healthcheck:
      test: curl --fail `hostname`:7626/alive || exit 1
      interval: 30s
      timeout: 15s
      retries: 4
      start_period: 300s
    logging:
      options:
        max-size: 50m

#  connectivity:
#    image: docker.io/eclipse/ditto-connectivity:${DITTO_VERSION:-latest}
#    deploy:
#      resources:
#        limits:
#          cpus: '0.3'
#          memory: 768m
#    restart: always
#    networks:
#      default:
#        aliases:
#          - ditto-cluster
#    depends_on:
#      - policies
#    environment:
#      - TZ=Europe/Berlin
#      - BIND_HOSTNAME=0.0.0.0
#      - DITTO_DEVOPS_FEATURE_WOT_INTEGRATION_ENABLED=true
#      # if connections to rabbitmq broker are used, you might want to disable ExitOnOutOfMemoryError, because the amqp-client has a bug throwing OOM exceptions and causing a restart loop
#      - JAVA_TOOL_OPTIONS=-XX:ActiveProcessorCount=1 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=280s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class=""
#      - MONGO_DB_HOSTNAME=mongodb
#    healthcheck:
#      test: curl --fail `hostname`:7626/alive || exit 1
#      interval: 30s
#      timeout: 15s
#      retries: 4
#      start_period: 300s
#    logging:
#      options:
#        max-size: 50m

  gateway:
    image: docker.io/eclipse/ditto-gateway:${DITTO_VERSION:-latest}
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512m
    restart: always
    networks:
      default:
        aliases:
          - ditto-cluster
    depends_on:
      - policies
    environment:
      - TZ=Europe/Berlin
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_PRE_AUTHENTICATION=true
      - DEVOPS_STATUS_SECURED=false
      - DITTO_DEVOPS_FEATURE_WOT_INTEGRATION_ENABLED=true
      - |
        JAVA_TOOL_OPTIONS=
        -XX:ActiveProcessorCount=1 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=500 
        -Dpekko.coordinated-shutdown.exit-jvm=on -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=280s -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=10s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=20s -Dpekko.cluster.downing-provider-class="" 
        -Dditto.gateway.health-check.cluster-roles.expected.0=policies 
        -Dditto.gateway.health-check.cluster-roles.expected.1=things 
        -Dditto.gateway.health-check.cluster-roles.expected.2=search 
        -Dditto.gateway.health-check.cluster-roles.expected.3=gateway 
    healthcheck:
      test: curl --fail `hostname`:7626/alive || exit 1
      interval: 30s
      timeout: 15s
      retries: 4
      start_period: 300s
    logging:
      options:
        max-size: 50m

  ditto-ui:
    image: docker.io/eclipse/ditto-ui:${DITTO_VERSION:-latest}
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 32m
    restart: always
    logging:
      options:
        max-size: 10m

  swagger-ui:
    image: docker.io/swaggerapi/swagger-ui:v5.9.1
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 32m
    restart: always
    volumes:
       - ../../../documentation/src/main/resources/openapi:/usr/share/nginx/html/openapi:ro
       - ../../../documentation/src/main/resources/images:/usr/share/nginx/html/images:ro
       - ../swagger3-index.html:/usr/share/nginx/html/index.html:ro
    command: nginx -g 'daemon off;'
    logging:
      options:
        max-size: 10m

#  node-red:
#    image: docker.io/nodered/node-red-docker:latest
#    volumes:
#       - /opt/docker-volumes/nodered-data:/data:rw
#       - ./nodered/settings.js:/data/settings.js:ro
#       - ./nodered/package.json:/data/package.json:rw
#       - ./nodered/flows-ditto.json:/data/flows-ditto.json:rw

  nginx:
    image: docker.io/nginx:1.21-alpine
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 32m
    restart: always
    volumes:
       - ./nginx.conf:/etc/nginx/nginx.conf:ro
       - ./nginx.htpasswd:/etc/nginx/nginx.htpasswd:ro
       - ./nginx-devops.htpasswd:/etc/nginx/nginx-devops.htpasswd:ro
       - ./html:/etc/nginx/html
       - ../nginx-cors.conf:/etc/nginx/nginx-cors.conf:ro
       - ../mime.types:/etc/nginx/mime.types:ro
       - ../../../documentation/src/main/resources/images:/etc/nginx/html/images:ro
       - ../../../documentation/src/main/resources/wot:/etc/nginx/html/wot:ro
       - /opt/letsencrypt/src/letsencrypt/letsencrypt-site/.well-known:/etc/nginx/html/.well-known:ro
       - /opt/letsencrypt/src/production/dh-param/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
       - /opt/docker-volumes/etc/letsencrypt/live/ditto.eclipseprojects.io/fullchain.pem:/etc/letsencrypt/live/ditto.eclipseprojects.io/fullchain.pem
       - /opt/docker-volumes/etc/letsencrypt/live/ditto.eclipseprojects.io/privkey.pem:/etc/letsencrypt/live/ditto.eclipseprojects.io/privkey.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - gateway
      - swagger-ui
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost/status || exit 1
      interval: 30s
      timeout: 15s
      retries: 60
      start_period: 120s
    logging:
      options:
        max-size: 10m

  autoheal:
    image: willfarrell/autoheal
    deploy:
      resources:
        limits:
          memory: 32m
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=30
    logging:
      options:
        max-size: 10m
