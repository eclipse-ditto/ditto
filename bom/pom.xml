<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation
  ~
  ~ See the NOTICE file(s) distributed with this work for additional
  ~ information regarding copyright ownership.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0
  ~
  ~ SPDX-License-Identifier: EPL-2.0
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ditto</groupId>
        <artifactId>ditto</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>ditto-bom</artifactId>
    <packaging>pom</packaging>
    <name>Eclipse Ditto :: BOM</name>

    <properties>
        <scala.version>2.13</scala.version> <!-- for scala libraries the scala version is used in their artifactId -->
        <scala.full.version>2.13.12</scala.full.version>
        <scala-parser-combinators.version>1.1.2</scala-parser-combinators.version>
        <scala-java8-compat.version>1.0.2</scala-java8-compat.version>

        <javac.source>17</javac.source>
        <javac.target>17</javac.target>

        <!-- ### Compile dependencies versions -->
        <minimal-json.version>0.9.5</minimal-json.version>
        <jackson-bom.version>2.14.3</jackson-bom.version>
        <typesafe-config.version>1.4.2</typesafe-config.version>
        <ssl-config-core.version>0.6.1</ssl-config-core.version>
        <kafka-client.version>3.5.1</kafka-client.version>
        <hivemq-mqtt-client.version>1.3.3</hivemq-mqtt-client.version>
        <sshd.version>2.9.2</sshd.version>
        <eddsa.version>0.3.0</eddsa.version>
        <lz4-java.version>1.8.0</lz4-java.version>

        <pekko-bom.version>1.0.1</pekko-bom.version>
        <pekko-http-bom.version>1.0.0</pekko-http-bom.version>
        <pekko-persistence-mongodb.version>1.0.1</pekko-persistence-mongodb.version>
        <pekko-persistence-inmemory.version>1.0.0</pekko-persistence-inmemory.version>
        <pekko-management.version>1.0.0</pekko-management.version>
        <pekko-connector-kafka.version>1.0.0</pekko-connector-kafka.version>
        <parboiled.version>2.5.0</parboiled.version>

        <!--  Necessary for pekko-persistence-mongodb -->
        <metrics4-scala.version>4.2.9</metrics4-scala.version>

        <!-- Keep these version consistent with pekko-persistence-mongodb.version's build.sbt -->
        <mongo-java-driver.version>4.10.2</mongo-java-driver.version>

        <jjwt.version>0.11.5</jjwt.version>
        <asm.version>9.2</asm.version>
        <qpid-jms-client.version>1.10.0</qpid-jms-client.version>
        <pjfanning-pekko-rabbitmq.version>7.0.0</pjfanning-pekko-rabbitmq.version>
        <amqp-client.version>5.18.0</amqp-client.version>
        <reactive-streams.version>1.0.4</reactive-streams.version>
        <netty-bom.version>4.1.99.Final</netty-bom.version>
        <cloudevents.version>2.3.0</cloudevents.version>

        <slf4j.version>1.7.36</slf4j.version>
        <logback.version>1.3.12</logback.version>
        <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>
        <fluency.version>2.6.5</fluency.version>
        <janino.version>3.1.10</janino.version>

        <!-- ### Metrics and Tracing -->
        <kamon.version>2.6.5</kamon.version>

        <jsr305.version>3.0.2</jsr305.version>

        <rhino.version>1.7.14</rhino.version>
        <!--
            be aware that connectivity mapping has a direct dependency on files inside this library.
            when updating this version, you should also check if the used paths and files still exist
            and update the code otherwise. see implementation of org.eclipse.ditto.connectivity.service.mapping.MessageMapper
        -->
        <js.bytebuffer.version>5.0.1</js.bytebuffer.version>
        <!--
            be aware that connectivity mapping has a direct dependency on files inside this library.
            when updating this version, you should also check if the used paths and files still exist
            and update the code otherwise. see implementation of org.eclipse.ditto.connectivity.service.mapping.MessageMapper
        -->
        <js.long.version>3.2.0</js.long.version>

        <caffeine.version>3.1.8</caffeine.version>
        <classindex.version>3.13</classindex.version>

        <!-- ### Testing dependencies versions -->
        <junit.version>4.13.2</junit.version>
        <junit-jupiter.version>5.10.0</junit-jupiter.version>
        <assertj.version>3.24.2</assertj.version>
        <mutability-detector.version>0.10.6</mutability-detector.version>
        <equals-verifier.version>3.10.1</equals-verifier.version>
        <mockito.version>4.7.0</mockito.version>
        <jsonassert.version>1.5.1</jsonassert.version>
        <awaitility.version>4.2.0</awaitility.version>

        <jmh.version>1.37</jmh.version>

        <scalatest.version>3.2.17</scalatest.version>
        <docker-java.version>3.3.3</docker-java.version>
        <system-rules.version>1.19.0</system-rules.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ### Compile ### -->
            <dependency>
                <groupId>com.eclipsesource.minimal-json</groupId>
                <artifactId>minimal-json</artifactId>
                <version>${minimal-json.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${typesafe-config.version}</version>
            </dependency>

            <!-- Pekko -->
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-serialization-jackson_2.13</artifactId>
                <version>${pekko-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-bom_${scala.version}</artifactId>
                <version>${pekko-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-connectors-kafka_${scala.version}</artifactId>
                <version>${pekko-connector-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-remote_${scala.version}</artifactId>
                <version>${pekko-bom.version}</version>
                <exclusions>
                    <!-- exclude netty from pekko-remote - we use aeron remoting instead -->
                    <!-- due to license issues with the old netty version we are not allowed to use it -->
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Pekko HTTP -->
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-http-bom_${scala.version}</artifactId>
                <version>${pekko-http-bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.parboiled</groupId>
                <artifactId>parboiled_${scala.version}</artifactId>
                <version>${parboiled.version}</version>
            </dependency>

            <!-- Pekko persistence MongoDB plugin -->
            <dependency>
                <groupId>com.github.scullxbones</groupId>
                <artifactId>pekko-persistence-mongodb_${scala.version}</artifactId>
                <version>${pekko-persistence-mongodb.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.dropwizard.metrics</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.mongodb.scala</groupId>
                <artifactId>mongo-scala-driver_2.13</artifactId>
                <version>${mongo-java-driver.version}</version>
            </dependency>


            <!-- Pekko Management -->
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-management_${scala.version}</artifactId>
                <version>${pekko-management.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-management-cluster-bootstrap_${scala.version}</artifactId>
                <version>${pekko-management.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-discovery-kubernetes-api_${scala.version}</artifactId>
                <version>${pekko-management.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-management-cluster-http_${scala.version}</artifactId>
                <version>${pekko-management.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-lease-kubernetes_${scala.version}</artifactId>
                <version>${pekko-management.version}</version>
            </dependency>

            <!-- MongoDB client -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>bson</artifactId>
                <version>${mongo-java-driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-core</artifactId>
                <version>${mongo-java-driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-reactivestreams</artifactId>
                <version>${mongo-java-driver.version}</version>
            </dependency>


            <!-- Others -->
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>ssl-config-core_${scala.version}</artifactId>
                <version>${ssl-config-core.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>io.cloudevents</groupId>
                <artifactId>cloudevents-http-basic</artifactId>
                <version>${cloudevents.version}</version>
            </dependency>

            <!-- ### Indirect "runtime" dependencies we want to pin to a common version -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.full.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.full.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-java8-compat_${scala.version}</artifactId>
                <version>${scala-java8-compat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_${scala.version}</artifactId>
                <version>${scala-parser-combinators.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams</artifactId>
                <version>${reactive-streams.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-commons</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-tree</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-analysis</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-util</artifactId>
                <version>${asm.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.qpid</groupId>
                <artifactId>qpid-jms-client</artifactId>
                <version>${qpid-jms-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pjfanning</groupId>
                <artifactId>pekko-rabbitmq_${scala.version}</artifactId>
                <version>${pjfanning-pekko-rabbitmq.version}</version>
            </dependency>
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${amqp-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hivemq</groupId>
                <artifactId>hivemq-mqtt-client</artifactId>
                <version>${hivemq-mqtt-client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-core</artifactId>
                <version>${sshd.version}</version>
            </dependency>

            <dependency>
                <groupId>net.i2p.crypto</groupId>
                <artifactId>eddsa</artifactId>
                <version>${eddsa.version}</version>
            </dependency>

            <dependency>
                <groupId>org.lz4</groupId>
                <artifactId>lz4-java</artifactId>
                <version>${lz4-java.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <type>pom</type>
                <version>${netty-bom.version}</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>org.komamitsu</groupId>
                <artifactId>fluency-core</artifactId>
                <version>${fluency.version}</version>
            </dependency>
            <dependency>
                <groupId>org.komamitsu</groupId>
                <artifactId>fluency-fluentd</artifactId>
                <version>${fluency.version}</version>
            </dependency>

            <dependency>
                <groupId>io.kamon</groupId>
                <artifactId>kamon-core_${scala.version}</artifactId>
                <version>${kamon.version}</version>
            </dependency>
            <dependency>
                <groupId>io.kamon</groupId>
                <artifactId>kamon-system-metrics_${scala.version}</artifactId>
                <version>${kamon.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.github.oshi</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.kamon</groupId>
                <artifactId>kamon-prometheus_${scala.version}</artifactId>
                <version>${kamon.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.squareup.okhttp3</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.squareup.okio</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.kamon</groupId>
                <artifactId>kamon-opentelemetry_${scala.version}</artifactId>
                <version>${kamon.version}</version>
            </dependency>
            <dependency>
                <groupId>io.kamon</groupId>
                <artifactId>kamon-executors_${scala.version}</artifactId>
                <version>${kamon.version}</version>
            </dependency>

            <!-- ### Compile - own artifacts ### -->
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-json</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-json-cbor</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-base-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-connectivity-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-policies-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-jwt-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-things-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-thingsearch-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-placeholders</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-rql-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-rql-parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-rql-search-option-parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-messages-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-rql-query</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-wot-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-wot-integration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-protocol</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-base-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-models-streaming</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-edge-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-utils-result</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-pekko</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-cache</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-cache-loaders</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-cluster</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-ddata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-health</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-http</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-jwt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-namespaces</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-protocol</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-pubsub</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-pubsub-policies</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-pubsub-things</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-search</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-tracing</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-metrics</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-extension</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-conditional-headers</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-persistent-actors</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-base-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-connectivity-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-policies-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-policies-enforcement</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-things-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-thingsearch-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-models-signal</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-models-signalenrichment</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-connectivity-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-gateway-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-gateway-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-policies-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-things-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-thingsearch-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.grons</groupId>
                <artifactId>metrics4-scala_${scala.version}</artifactId>
                <version>${metrics4-scala.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mozilla</groupId>
                <artifactId>rhino-runtime</artifactId>
                <version>${rhino.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>bytebuffer</artifactId>
                <version>${js.bytebuffer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>long</artifactId>
                <version>${js.long.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.errorprone</groupId>
                        <artifactId>error_prone_annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.atteo.classindex</groupId>
                <artifactId>classindex</artifactId>
                <version>${classindex.version}</version>
            </dependency>

            <!-- ### Provided - own artifacts ### -->
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-utils-jsr305</artifactId>
                <version>${project.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-legal</artifactId>
                <version>${project.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- ### Testing ### -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mutabilitydetector</groupId>
                <artifactId>MutabilityDetector</artifactId>
                <version>${mutability-detector.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equals-verifier.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.github.classgraph</groupId>
                <artifactId>classgraph</artifactId>
                <version>4.8.126</version>
                <scope>test</scope>
            </dependency>

            <!-- scalatest dependency leaked from pekko-http-testkit -->
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.version}</artifactId>
                <version>${scalatest.version}</version> <!-- version used by pekko-http-testkit @ pekko-http-bom.version -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.github.alstanchev</groupId>
                <artifactId>pekko-persistence-inmemory_${scala.version}</artifactId>
                <version>${pekko-persistence-inmemory.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-core</artifactId>
                <version>${docker-java.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java-transport-zerodep</artifactId>
                <version>${docker-java.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.pekko</groupId>
                <artifactId>pekko-connectors-kafka-testkit_${scala.version}</artifactId>
                <version>${pekko-connector-kafka.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-rules</artifactId>
                <version>${system-rules.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <!-- replaced by newer JUnit version -->
                        <groupId>junit</groupId>
                        <artifactId>junit-dep</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- ### Testing - own artifacts ### -->
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-json</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-base-model</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-policies-model</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-things-model</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-base-service</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-pekko</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-persistence</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-test</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-utils-tracing</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.ditto</groupId>
                <artifactId>ditto-internal-connectivity-common</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>org.eclipse.ditto</groupId>
            <artifactId>ditto-legal</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <configuration>
                    <flattenMode>bom</flattenMode>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

