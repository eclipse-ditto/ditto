{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "description": "A *Thing* is a generic entity which can be used as a handle for multiple *Features* belonging to this *Thing*.",
  "title": "Thing in API v2",
  "properties": {
    "thingId": {
      "type": "string",
      "description": "Unique identifier representing the Thing - has to:\n * contain the mandatory namespace prefix (java package notation + `:` colon) - periods (`.`) may be used in namespace but not as first or last character\n * conform to [RFC-2396 (URI)](https://www.ietf.org/rfc/rfc2396.txt).\n\nExamples for a valid Thing ID:\n * `org.eclipse.ditto:xdk_53`\n * `foo:xdk_53`\n * `org.eclipse.vorto_42:xdk_thing`"
    },
    "policyId": {
      "type": "string",
      "description": "Links to the ID of an existing Policy which contains the authorization information applied for this Thing."
    },
    "attributes": {
      "title": "Attributes",
      "type": "object",
      "description": "The Attributes that describe this Thing in more detail. Can be an arbitrary JSON object. Attributes are typically used to model rather static properties at the Thing level. Static means that the values do not change as frequently as property values of Features."
    },
    "features": {
      "title": "Features",
      "type": "object",
      "description": "The Features belonging to this Thing. A Thing can handle any number of Features.\n The key of this object represents the `featureId`. Due to the fact that a Feature ID often needs to be set in the path of a HTTP request, we strongly recommend to use a restricted the set of characters (e.g. those for [Uniform Resource Identifiers (URI)](http://www.ietf.org/rfc/rfc2396.txt)).",
      "additionalProperties": {
        "title": "Feature",
        "type": "object",
        "description": "A Feature is used to manage all data and functionality of a Thing that can be clustered in an outlined technical context.",
        "additionalProperties": {
          "type": "object",
          "description": "The elements of a Feature.",
          "properties": {
            "definition": {
              "title": "Definition",
              "type": "array",
              "description": "The Definition of the Feature, a list of Identifiers containing at least 1 Identifier in the form 'namespace:name:version'.",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string",
                "description": "A single fully qualified Identifier of a Feature Definition in the form 'namespace:name:version'.",
                "pattern": "(?<namespace>[_a-zA-Z0-9\\-.]+):(?<name>[_a-zA-Z0-9\\-.]+):(?<version>[_a-zA-Z0-9\\-.]+)"
              }
            },
            "properties": {
              "title": "Properties",
              "type": "object",
              "description": "The data related to a Feature is managed in form of a list of properties. Each property itself can be either a simple/scalar value or a complex object. Allowed is any JSON object."
            }
          }
        }
      }
    },
    "_namespace": {
      "type": "string",
      "description": "_(read-only)_ The namespace that is also contained in the `thingId` field (the prefix part, up to the `:`)."
    },
    "_revision": {
      "type": "integer",
      "description": "_(read-only)_ The revision is a counter which is incremented on each modification of a Thing."
    },
    "_modified": {
      "type": "string",
      "description": "_(read-only)_ The modified timestamp of the Thing in ISO-8601 UTC format. The timestamp is set on each modification of a Thing."
    }
  },
  "required": [
    "thingId", "policyId"
  ]
}
