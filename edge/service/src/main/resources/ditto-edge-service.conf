ditto {
  extensions {
    edge-command-forwarder-extension = org.eclipse.ditto.edge.service.dispatching.NoOpEdgeCommandForwarderExtension
    signal-transformers-provider = {
      extension-class = org.eclipse.ditto.base.service.signaltransformer.SignalTransformers
      extension-config {
        signal-transformers = [
          {
            extension-class: org.eclipse.ditto.edge.service.dispatching.signaltransformer.DefaultNamespaceAppender,
            extension-config: {
              # specifies the default namespace to use when e.g. creating things/policies via POST (without specifying a namespace)
              default-namespace = "org.eclipse.ditto"
              default-namespace = ${?DITTO_DEFAULT_NAMESPACE}
            }
          },
          "org.eclipse.ditto.edge.service.dispatching.signaltransformer.OriginatorSetterSignalTransformer"
        ]
      }
    }
    ditto-headers-validator = {
      extension-class = org.eclipse.ditto.edge.service.headers.DefaultDittoHeadersValidator
      extension-config {
        # limit on the size of Ditto headers
        max-bytes = 5k
        max-bytes = ${?LIMITS_MESSAGES_HEADERS_SIZE}

        # limits on the number of authorization subjects in Ditto headers
        max-auth-subjects = 100
        max-auth-subjects = ${?LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT}
      }
    }
  }

  ask-with-retry {
    # maximum duration to wait for answers from entity shard regions
    ask-timeout = 5s
    ask-timeout = ${?CONCIERGE_CACHES_ASK_TIMEOUT}

    # one of: OFF, NO_DELAY, FIXED_DELAY, BACKOFF_DELAY
    retry-strategy = BACKOFF_DELAY
    retry-strategy = ${?CONCIERGE_CACHES_ASK_RETRY_STRATEGY}

    retry-attempts = 3
    retry-attempts = ${?CONCIERGE_CACHES_ASK_TIMEOUT_RETRIES}

    fixed-delay = 5s
    fixed-delay = ${?CONCIERGE_CACHES_ASK_FIXED_DELAY}

    backoff-delay {
      min = 100ms
      max = 10s
      # must be between 0.0 and 1.0:
      random-factor = 0.5
    }
  }
}
